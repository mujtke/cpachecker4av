scripts/cpa.sh -heap 4096M -benchmark -timelimit 120s -config ./config/myAnalysis-concurrent-interrupt-benchmark.properties -stats -spec ../benchmark-racebench/properties/unreach-call.prp -32 ../benchmark-racebench/2.1_remarks/svp_simple_008_001.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 4096M.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 120s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 2.0 / myAnalysis-concurrent-interrupt-benchmark (Java HotSpot(TM) 64-Bit Server VM 11.0.8) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "../benchmark-racebench/2.1_remarks/svp_simple_008_001.i" (CPAchecker.parse, INFO)

Building Constrained Dependency Graph ... (EdgeInfo.<init>, INFO)

Using unsound approximation of ints with unbounded integers and floats with rationals for encoding program semantics. (FormulaManagerView.<init>, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Error: Unsupported feature (BDD-analysis does not support arrays: svp_simple_008_001_global_array[(i * 20) + (j * 10)]) (BDDVectorCExpressionVisitor.visit, SEVERE)


BDDCPA statistics
-----------------
Number of boolean vars:           1 (of 1)
Number of intEqual vars:          6 (of 6)
Number of intAdd vars:            1 (of 1)
Number of all vars:               8
Number of intBool partitions:     1
Number of intEq partitions:       6
Number of intAdd partitions:      1
Number of all partitions:         14
Number of named predicates:          1792
Number of BDD nodes:                               15802
Size of BDD node table:                            207593
Size of BDD cache:                                 20759
Size of BDD node cleanup queue:                    0.00 (sum: 0, count: 16595, min: 0, max: 0)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     1.00 (sum: 78, count: 78, min: 1, max: 1) [1 x 78]
Number of states with assumption transitions:      0

Constrained Dependency Graph statistics
---------------------------------------
Time for building the nodes of conditional dependence graph:     0.038s
Time for building conditional dependence graph:        0.202s
  Number of dependent node:                               7 (count: 1, min: 7, max: 7, avg: 7.00)
  Number of dependent node pairs:                        19
  Number of un-conditional dependent node pairs:         19
  Number of block:                                        7
  Size of block:                                          7 (sum: 7, min: 1, max: 1, avg: 1.00)

CPA algorithm statistics
------------------------
Number of iterations:            79
Max size of waitlist:            2
Average size of waitlist:        1
ThreadingSortedWaitlist:                           55.00 (sum: 55, count: 1, min: 55, max: 55)
CallstackSortedWaitlist:                           0.00 (sum: 0, count: 24, min: 0, max: 0)
Number of computed successors:   79
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         0
Number of times breaked:         0

Total time for CPA algorithm:         0.196s (Max:     0.196s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.005s
  Time for transfer relation:         0.151s
  Time for stop operator:             0.014s
  Time for adding to reached set:     0.014s

CPAchecker general statistics
-----------------------------
Number of program locations:                       48
Number of CFA edges (per node):                          47 (count: 48, min: 0, max: 2, avg: 0.98)
Number of relevant variables:                      1
Number of functions:                               3
Number of loops (and loop nodes):                         1 (sum: 4, min: 4, max: 4, avg: 4.00)
Size of reached set:             80
  Number of partitions:          43
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [{svp_simple_008_001_isr_1=N24 (before line 142) Function svp_simple_008_001_isr_1 called from node N21, stack depth 1 [2f6f4ac4], stack [svp_simple_008_001_isr_1] @@ 1 @@ 1, svp_simple_008_001_main=N6 (before line 125) Function svp_simple_008_001_main called from node N1, stack depth 1 [5341641d], stack [svp_simple_008_001_main] @@ -2147483648 @@ 0}])
  Number of target states:       0
  Size of final wait list:       2

Time for analysis setup:          1.817s
  Time for loading CPAs:          0.349s
  Time for loading parser:        0.292s
  Time for CFA construction:      0.851s
    Time for parsing file(s):     0.506s
    Time for AST to CFA:          0.187s
    Time for CFA sanity check:    0.000s
    Time for post-processing:     0.107s
      Time for function pointers resolving:            0.002s
        Function calls via function pointers:             0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer calls:              0 (count: 1, min: 0, max: 0, avg: 0.00)
        Function calls with function pointer arguments:        0 (count: 1, min: 0, max: 0, avg: 0.00)
        Instrumented function pointer arguments:          0 (count: 1, min: 0, max: 0, avg: 0.00)
      Time for classifying variables:                  0.067s
        Time for collecting variables:                 0.043s
        Time for solving dependencies:                 0.001s
        Time for building hierarchy:                   0.000s
        Time for building classification:              0.023s
        Time for exporting data:                       0.000s
Time for Analysis:                0.196s
CPU time for analysis:            0.200s
Total time for CPAchecker:        2.014s
Total CPU time for CPAchecker:    2.020s
Time for statistics:              0.098s

Time for Garbage Collector:       0.033s (in 2 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
